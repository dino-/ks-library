## Getting and processing a year's worth of inspection data

So many I did them in 4 blocks for quarters of the year:

nc-wake data

nc-wake_q1  2014-01-24 2014-04-23
nc-wake_q2  2014-04-24 2014-07-23
nc-wake_q3  2014-07-24 2014-10-23
nc-wake_q4  2014-10-24 2015-01-23


## 2015-01-15 New Couchbase document structure

      { "_id": "uuid"
      , "type": "inspection"
      , "place_id": "from G Places"
      , "inspection_source": "nc_wake"
      , "inspection":
         { "name": "..."
         , "addr": "..."
         , "date": [2014,12,30]
         , "score": 94.7
         , "violations": 23
         , "crit_violations": 3
         , "reinspection": true
         , "detail": "http:/..."
         }
      , "place":
         { "name": "..."
         , "vicinity": "..."
         , "location":
            { "lat": 13.1856902
            , "lng": -78.18342
            }
         }
      }


- Is inspection.violations.id an integer or string across different
  counties?
   - Found violation ids that are alphanumeric in NY state. Example: 2C, 4A
- Any other fields in a violation?
   - Yes, the points they cost individually against the whole score for NC
   - No, there are no points or even scores for NY
- Is reinspection a boolean or more values?


## 2015-01-14

We *do* want to continue storing inspection name and address.


## Isolating subsets of inspection files

From within some directory full of inspection JSON files..

    $ cd data/wake_2014..

The first 100

    $ find . type f | head -100 | xargs cp -v -t ../foo/

The second 100

    $ find . type f | head -200 | tail -100 | xargs cp -v -t ../foo/

The third 100

    $ find . type f | head -300 | tail -100 | xargs cp -v -t ../foo/


## 2014-12-29

correlating inspection data with location data

* go through all JSON from health inspections (in data/)
* for each "location", hit GEO CODE API
* get back doc with lat/lng in "geometry" "location"
* pass lat/lng to Places API (REST)
* interested in locations that match on the stree address number
* in those, interested in geometry location and place_id

Address (from our database) 
    "location": "4121 NEW BERN AVE STE 109 RALEIGH, NC 27610"

Geocoder API 
- they call this a 'forward lookup'
- given a postal address return the geolocation

    https://maps.googleapis.com/maps/api/geocode/json?address=3D4121%20NEW%20BERN%20AVE%20STE%20109%20RALEIGH,%20NC%2027610

    "geometry" : {
            "location" : {
               "lat" : 35.8016467,
               "lng" : -78.5653275
            },


Places API: 
- use the lat & lng returned by Geolocator to find the restaurant

    https://maps.googleapis.com/maps/api/place/nearbysearch/json?key=APIKEYGOESHERE&location=3D35.8016467,-78.5653275&radius=3D50&types=3Drestaurant


* match names 
* match location (from our data) to 'vicinity' (Places data)
* note the 'score' for the string compare using your algorithm
* note the place_id and geometry from the Places API results


## first notes

Starting form is here: http://wake.digitalhealthdepartment.com/reports.cfm
